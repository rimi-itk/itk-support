on: pull_request
name: Review
jobs:
  changelog:
    runs-on: ubuntu-latest
    name: Changelog should be updated
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Git fetch
        run: git fetch
      - name: Check that changelog has been updated.
        run: git diff --exit-code origin/${{ github.base_ref }} -- CHANGELOG.md && exit 1 || exit 0

  composer-validate:
    name: Validate composer
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@master
      - run: docker network create frontend
      - run: docker compose up --detach
      - name: Validate composer
        run: docker compose run --rm phpfpm composer validate

  composer-normalize:
    name: Normalize composer
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@master
      - run: |
          cp ticket_handler.local.yaml.example ticket_handler.local.yaml
          docker network create frontend
          docker compose up --wait
          docker compose exec --user root phpfpm composer install
      - name: Normalize composer
        # https://github.com/ergebnis/composer-normalize?tab=readme-ov-file#continuous-integration
        run: docker compose run --rm phpfpm composer normalize --dry-run

  coding-standards-check_php-cs-fixer:
    name: coding-standards-check/php-cs-fixer
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@master
      - run: |
          cp ticket_handler.local.yaml.example ticket_handler.local.yaml
          docker network create frontend
          docker compose up --wait
          docker compose exec --user root phpfpm composer install
      - name: coding-standards-check/php-cs-fixer
        run: docker compose exec --user root phpfpm composer coding-standards-check/php-cs-fixer

  coding-standards-check_twig-cs-fixer:
    name: coding-standards-check/twig-cs-fixer
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@master
      - run: |
          cp ticket_handler.local.yaml.example ticket_handler.local.yaml
          docker network create frontend
          docker compose up --wait
          docker compose exec --user root phpfpm composer install
      - name: coding-standards-check/twig-cs-fixer
        run: docker compose exec --user root phpfpm composer coding-standards-check/twig-cs-fixer

  coding-standards-check_markdownlint:
    name: coding-standards-check/markdownlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: docker network create frontend
      - run: docker compose run --rm node yarn install
      - name: coding-standards-check/markdownlint
        run: docker compose run --rm node yarn coding-standards-check/markdownlint

  coding-standards-yamllint:
    runs-on: ubuntu-latest
    name: coding-standards-yamllint
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Lint YAML
        run: docker run --volume "${PWD}:/code" --rm pipelinecomponents/yamllint yamllint ticket_handler.local.yaml.example

  coding-standards-shellcheck:
    runs-on: ubuntu-latest
    name: coding-standards-shellcheck
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Lint scripts
        run: docker run --rm --volume "${PWD}:/mnt" koalaman/shellcheck:stable tests/api-test

  code-analysis-phpstan:
    name: code-analysis/phpstan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@master
      - run: |
          cp ticket_handler.local.yaml.example ticket_handler.local.yaml
          docker network create frontend
          docker compose up --wait
          docker compose exec --user root phpfpm composer install
      - name: code-analysis/phpstan
        run: docker compose exec --user root phpfpm composer code-analysis/phpstan

  test-api-test:
    name: test-api-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: |
          cp ticket_handler.local.yaml.example ticket_handler.local.yaml
          docker network create frontend
          docker compose up --wait
          docker compose exec --user root phpfpm composer install
      - run: |
          USE_TRAEFIK=0 ./tests/api-test
